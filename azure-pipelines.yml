# PHP as Linux Web App on Azure
# Build, package and deploy your PHP project to Azure Linux Web App.
# Add steps that run tests and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger: none
parameters:
  - name: branch
    default: false
    displayName: Name of the branch to be deployed
    type: string
variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '718ff221-6e55-4c06-8072-20a820806ead'

  # Web app name
  webAppName: 'user-webapp-app'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'dev'

  # Root folder under which your composer.json file is available.
  rootFolder: $(System.DefaultWorkingDirectory)
  
  branch_name: ${{parameters.branch}}
  
resources:
  repositories:
    - repository: first
      type: github
      ref: 'refs/heads/$(branch_name)'
      name: avin/checkout
      endpoint: 'avin0001'
      
stages:
- stage: Build
  displayName: Build stage
  variables:
    phpVersion: '8.0'
  jobs:
  - job: BuildJob
    pool:
      name: Default
    steps:
    - checkout: first
      displayName: branch name is $(branch_name)
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(rootFolder)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: Default
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : '
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
